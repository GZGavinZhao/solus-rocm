name       : hipcub
version    : 5.5.1
release    : 2
source     :
    - https://github.com/ROCmSoftwarePlatform/hipCUB/archive/refs/tags/rocm-5.5.1.tar.gz : ad83f3f1ed85ead9e3012906957c125a896168be913f6fb6af298228fc571480
license    : MIT
component  : programming.library
summary    : Reusable software components for ROCm developers
description: |
    hipCUB is a thin wrapper library on top of rocPRIM or CUB. It enables developers to port a project using the CUB library to the HIP layer to run on AMD hardware. In the ROCm environment, hipCUB uses the rocPRIM library as the backend. However, on CUDA platforms it uses CUB instead.
clang      : yes
builddeps  :
    - rocprim-devel
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["AMDGPU_TARGETS"]="gfx1030"
        ["HCC_AMDGPU_TARGETS"]="gfx1030"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    unset CFLAGS
    unset CXXFLAGS
    unset LDFLAGS
    export CXXFLAGS="-fcf-protection=none -mllvm -amdgpu-opt-vgpr-liverange=0"
setup      : |
    %cmake_ninja $ROCM_CMAKE_FLAGS \
                 -DCMAKE_CXX_COMPILER=hipcc
build      : |
    %ninja_build
install    : |
    %ninja_install
