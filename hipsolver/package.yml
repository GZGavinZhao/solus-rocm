name       : hipsolver
version    : 5.5.1
release    : 2
source     :
    - https://github.com/ROCmSoftwarePlatform/hipSOLVER/archive/refs/tags/rocm-5.5.1.tar.gz : 826bd64a4887176595bb7319d9a3612e7327602efe1f42aa3f2ad0e783d1a180
license    : MIT
component  : programming.library
summary    : ROCm SOLVER marshalling library
description: |
    hipSOLVER is a LAPACK marshalling library, with multiple supported backends. It sits between the application and a 'worker' LAPACK library, marshalling inputs into the backend library and marshalling results back to the application. hipSOLVER exports an interface that does not require the client to change, regardless of the chosen backend. Currently, hipSOLVER supports rocSOLVER and cuSOLVER as backends.
clang      : yes
builddeps  :
    - rocblas-devel
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
    - rocsolver-devel
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["AMDGPU_TARGETS"]="gfx1030"
        ["HCC_AMDGPU_TARGETS"]="gfx1030"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    unset CFLAGS
    unset CXXFLAGS
    unset LDFLAGS
    export CXXFLAGS="-fcf-protection=none -mllvm -amdgpu-opt-vgpr-liverange=0"
setup      : |
    %cmake_ninja $ROCM_CMAKE_FLAGS
build      : |
    %ninja_build
install    : |
    %ninja_install
