name       : rocblas
version    : 5.5.1
release    : 2
source     :
    - https://github.com/ROCmSoftwarePlatform/rocBLAS/archive/refs/tags/rocm-5.5.1.tar.gz : 7916a8d238d51cc239949d799f0b61c9d5cd63c6ccaed0e16749489b89ca8ff3
license    : MIT
component  : programming.library
summary    : Next generation BLAS implementation for ROCm platform
description: |
    rocBLAS is the AMD library for Basic Linear Algebra Subprograms (BLAS) on the ROCm platform. It is implemented in the HIP programming language and optimized for AMD GPUs.
clang      : yes
networking : yes
cache      : no
builddeps  :
    # - pkgconfig(msgpack)
    # - msgpack-cpp-devel
    # - python-msgpack
    - pkgconfig(libhsakmt)
    - perl-file-which
    - pyyaml
    - python-wheel
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
    - git
    - virtualenv
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["AMDGPU_TARGETS"]="gfx1030"
        ["HCC_AMDGPU_TARGETS"]="gfx1030"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    unset CFLAGS
    unset CXXFLAGS
    unset LDFLAGS
    export CXXFLAGS="-fcf-protection=none -mllvm -amdgpu-opt-vgpr-liverange=0"
setup      : |
    # %patch -p1 < $pkgfiles/use-msgpack.diff

    %cmake_ninja $ROCM_CMAKE_FLAGS -Wno-dev \
                 -L \
                 -Dpython="/usr/bin/python3" \
                 -DENABLE_INLINE_ASM=1 \
                 -DBUILD_WITH_TENSILE=OFF \
                 -DTensile_PRINT_DEBUG=ON \
                 -DTensile_LIBRARY_FORMAT=yaml \
                 -DTensile_LOGIC=asm_lite \
                 -DTensile_CPU_THREADS=%YJOBS% \
                 -DBUILD_CLIENTS_TESTS=OFF \
                 -DBUILD_CLIENTS_BENCHMARKS=OFF \
                 -DBUILD_CLIENTS_SAMPLES=OFF \
                 -DBUILD_TESTING=OFF \
build      : |
    %ninja_build
install    : |
    %ninja_install
