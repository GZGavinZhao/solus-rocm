name       : rocmlir
version    : 5.5.0
release    : 2
source     :
    - https://github.com/ROCmSoftwarePlatform/rocMLIR/archive/refs/tags/rocm-5.5.0.tar.gz : a5f62769d28a73e60bc8d61022820f050e97c977c8f6f6275488db31512e1f42
license    : Apache-2.0
component  : programming.devel
summary    : MLIR-based convolution and GEMM kernel generator for ROCm
description: |
    rocMLIR is a MLIR-based convolution and GEMM kernel generator targetting AMD hardware. This generator is mainly used from MIOpen and MIGraphX, but it can be used on a standalone basis.
clang      : yes
builddeps  :
    - pkgconfig(zlib)
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
    - rocblas-devel
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["AMDGPU_TARGETS"]="gfx1030"
        ["HCC_AMDGPU_TARGETS"]="gfx1030"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done
setup      : |
    %cmake_ninja -DBUILD_FAT_LIBROCKCOMPILER=ON
build      : |
    %ninja_build librockCompiler
install    : |
    %ninja_install
