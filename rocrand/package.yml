name       : rocrand
version    : 2.10.17
release    : 2
source     :
    - https://github.com/ROCmSoftwarePlatform/rocRAND/archive/refs/tags/rocm-5.6.1.tar.gz : 6bf71e687ffa0fcc1b00e3567dd43da4147a82390f1b2db5e6f1f594dee6066d
license    : MIT
component  : programming.library
summary    : RAND library for HIP programming language
description: |
    rocRAND provides functions that generate pseudo-random and quasi-random numbers. It is implemented in the HIP programming language and optimised for AMD's latest discrete GPUs. It is designed to run on top of AMD's Radeon Open Compute ROCm runtime, but it also works on CUDA enabled GPUs.
clang      : yes
builddeps  :
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
    - git
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/share/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["AMDGPU_TARGETS"]="gfx1030"
        ["HCC_AMDGPU_TARGETS"]="gfx1030"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    unset CFLAGS
    unset CXXFLAGS
    unset LDFLAGS
    export CXXFLAGS="-fcf-protection=none -mllvm -amdgpu-opt-vgpr-liverange=0"
setup      : |
    %cmake_ninja $ROCM_CMAKE_FLAGS \
                 -DCMAKE_CXX_COMPILER=hipcc \
                 -DBUILD_HIPRAND=OFF \
build      : |
    %ninja_build
install    : |
    %ninja_install
    rm -rf $installdir/usr/*rand
